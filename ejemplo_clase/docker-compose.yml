version: "3.3"
# Este es un archivo de docker-compose.yml para configurar el uso de contenedores de software.

# Agregamos una red personalizada para trabajar con otros servicios:
networks:
  isolation-network:
    name: isolation-network
    driver: bridge

services:

  db:
    # Este servicio crea una base de datos de tipo Postgres.
    image: postgres:13.2
    restart: always
    volumes:
      # Aquí se enlaza el contenido de dentro del contenedor con el directorio en nuestra PC
      # de esa manera lo que guardemos en la base de datos va a quedar accesible en nuestra carpeta.
      - ./database:/var/lib/postgresql/data

    environment:
      # Postgres nos exige que establezcamos un usuario por defecto, esto se hace por medio
      # de variables de entorno. Según el hub de Postgres:
      POSTGRES_DB: marvel_db
      POSTGRES_USER: inove_user
      POSTGRES_PASSWORD: 123Marvel!

    ports:
      # Enlazamos el puerto en el que trabaja Postgres, por defecto el 5432
      - 5432:5432
    # Asignamos el servicio a la red personalizada
    networks: 
      - isolation-network

  adminer:
    # Una interfaz para monitoreo y gestión de nuestra base de datos.
    # Se puede acceder a ella en localhost:8080
    image: adminer:4.8.0
    restart: always
    ports:
      - 8080:8080
    # Asignamos el servicio a la red personalizada
    networks: 
      - isolation-network
    # depends_on indica que este servicio depende de que primero inicie "db"
    depends_on: ["db"]

  modulo_8:
    # build es el lugar desde donde toma los archivos para generar la imagen.
    build: .
    # Imágen a utilizar:
    image: modulo_8
    # Nombre del container:
    container_name: modulo_8
    # Comportamiento ante fallos y al iniciar el sistema:
    restart: always
    # Carpetas enlazadas:
    volumes:
      # Source code directory:
      - type: bind
        source: .
        target: /opt/back_end
    # Puertos enlazados:
    ports:
        - "8000:8000"
    # Control de consola:
    stdin_open: true
    tty: true
    # Asignamos el servicio a la red personalizada
    networks: 
      - isolation-network
    command: python marvel/manage.py runserver 0.0.0.0:8000